{"version":3,"sources":["assest/Image/logo.png","Components/Monitor/PersonList/personImages/anton.png","Components/Monitor/PersonList/personImages/waeel.png","Components/Monitor/PersonList/personImages/rezan.png","Components/Monitor/PersonList/personImages/mustafa.png","Components/Monitor/PersonList/personImages/penguin.png","Components/Monitor/PersonList/personImages/horse.png","Components/Monitor/PersonList/personImages/monkey.png","Components/Monitor/PersonList/personImages/rabbit.png","Components/Monitor/PersonList/personImages/bull.png","Components/Monitor/PersonList/personImages/mad.png","Components/Monitor/PersonList/personImages/sad.png","Components/Monitor/PersonList/personImages/happy.png","Components/Monitor/PersonList/personImages/disappointment.jpg","Components/Monitor/PersonList/personImages/ontime.jpg","Components/Monitor/PersonList/personImages/tolate.jpg","Components/Monitor/Dbapi/Dbapi.js","Components/Monitor/Weather/day_details.js","Components/Monitor/Weather/services/date_helpers.js","Components/Monitor/Weather/services/api.js","Components/Monitor/Weather/Weather.js","Components/Monitor/PersonList/PersonList.js","Components/Monitor/Monitor.js","Components/Members/MembersList.js","Components/Members/Members.js","Components/Profile/Profile.js","Components/Error.js","Components/Nav/Nav.js","Components/Report/Swipe.js","Components/Report/Report.js","Components/UserProfile/Timer.js","Components/UserProfile/UserProfile.js","Components/Kurse/Kurs1.js","Components/Kurse/Kurs2.js","Components/Kurse/Kurse.js","Components/Content/Content.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","db","display","height","width","monitor","margin","DbApi","className","style","title","src","frameborder","React","Component","DayDetails","date","icon","data","weather","dt_txt","main","alt","moment","format","get","getTime","description","temp","Api","get5daysForecast","city","country","apiKey","fetch","apiUrl","then","response","json","Weather","props","state","weatherData","list","this","updateWeatherData","setState","slice","map","dayData","key","dt","icons","anton","mustafa","rezan","waeel","penguin","horse","monkey","rabbit","bull","mad","sad","happy","disappointment","drama","disaster","initialPersons","JSON","stringify","name","arrive","id","Math","random","Persons","parse","sort","a","b","newPersons","PersonList","useState","personsState","setPersons","clock","setClock","index","setIndex","showPopup","setShowPopup","popImg","setPopImg","setInterval","smiliStyle","marginTop","userPic","persons","person","smili","onClick","length","arrivedPerson","setTimeout","addPerson","backgroundImage","monitorStyle","justifyContent","Monitor","MembersList","console","log","personData","matrikelNummer","firstName","lastName","telefon","email","adresse","street","stadt","Members","Data","query","arr","callback","AllMembers","item","filter","toLowerCase","search","MyData","uuid","htmlFor","type","value","onChange","e","target","Profile","handleChange","AllData","newData","el","PersonName","infoPerson","photo","placeholder","chipNumber","hausNummer","roles","Error","Nav","to","Swipe","swipe","handelChange","canEdit","setCanEdit","disabled","defaultChecked","was","defaultValue","reason","initialSwipes","in","out","Swipes","Report","swipeState","setSwipeState","newValue","newSwipe","splice","indexOf","swipes","Timer","timerOn","timerStart","timerTime","startTimer","Date","now","timer","stopTimer","clearInterval","resetTimer","seconds","floor","minutes","hours","nameStyle","flexDirection","justifyConrent","h1Style","paddingRight","hStyle","Kurs1","kursDiv","backgroundColor","borderRadius","Kurse","exact","path","component","Kurs2","Content","UserProfile","App","Logo","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e205252f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9eaab74d.png\";","module.exports = __webpack_public_path__ + \"static/media/anton.9fa7c94e.png\";","module.exports = __webpack_public_path__ + \"static/media/waeel.ec94034a.png\";","module.exports = __webpack_public_path__ + \"static/media/rezan.1c78d736.png\";","module.exports = __webpack_public_path__ + \"static/media/mustafa.3dc92f5b.png\";","module.exports = __webpack_public_path__ + \"static/media/penguin.67c377a2.png\";","module.exports = __webpack_public_path__ + \"static/media/horse.a904fed1.png\";","module.exports = __webpack_public_path__ + \"static/media/monkey.2e90aabc.png\";","module.exports = __webpack_public_path__ + \"static/media/rabbit.4903cec0.png\";","module.exports = __webpack_public_path__ + \"static/media/bull.3740cd1f.png\";","module.exports = __webpack_public_path__ + \"static/media/mad.f6f796b7.png\";","module.exports = __webpack_public_path__ + \"static/media/sad.8c0b4eb4.png\";","module.exports = __webpack_public_path__ + \"static/media/happy.7c27ffed.png\";","module.exports = __webpack_public_path__ + \"static/media/disappointment.12e55af3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ontime.c596d6e8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tolate.70e128ee.jpg\";","import React from \"react\";\nimport \"./Dbapi.css\";\n\nconst db = {\n  display: \"flex\",\n  height: \"650px\",\n  width: \"fit-content\"\n};\n\nconst monitor = {\n  margin: \"10px\",\n  height: \"610px\"\n};\nexport default class DbApi extends React.Component {\n  render() {\n    return (\n      <div className=\"DB\" style={db}>\n        <iframe\n          title=\"Düsseldorf, Derendorf S\"\n          style={monitor}\n          src=\"http://haltestellenmonitor.vrr.de/monitor/8fdf5af2ff9b13b5f69c9bf82bdf8b16\"\n          frameborder=\"0\"\n        ></iframe>\n\n        <iframe\n          title=\"Düsseldorf, Alter Schlachthof\"\n          style={monitor}\n          src=\"http://haltestellenmonitor.vrr.de/monitor/6b3bd3e2d5d8ed60988f91341bc2bfb3\"\n          frameborder=\"0\"\n        ></iframe>\n\n        <iframe\n          title=\"Düsseldorf, Rather Str.\"\n          style={monitor}\n          src=\"http://haltestellenmonitor.vrr.de/monitor/4472df4258117498ffb7870124088bb0\"\n          frameborder=\"0\"\n        ></iframe>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { getDayName, getTime } from './services/date_helpers';\nimport './day_details.css';\n\nconst getIconUrl = (icon) => {\n  return 'http://openweathermap.org/img/w/' + icon + '.png';\n}\n\nconst DayDetails = ({data}) => {\n  let {weather, dt_txt, main} = data;\n\n  return (\n    <li className='day-details'>\n      <img className='weather-icon' alt=\"weather-icon\" src={getIconUrl(weather[0].icon)}/>\n      <div className='description'>\n        <strong className='date'>{getDayName(dt_txt)}, {getTime(dt_txt)}</strong>\n        <span>{weather[0].description}, {main.temp} C</span>\n      </div>\n    </li>\n  );\n}\n\nexport default DayDetails;\n","import moment from 'moment';\n\nexport const getDayName = (date) => {\n  return moment(date).format('dddd');\n}\n\nexport const getTime = (date) => {\n  let h =  moment(date).get('hour'), m = '00';\n  let time = h + ':' + m;\n\n  return time;\n}\n","const apiUrl = 'http://api.openweathermap.org/data/2.5/';\n\nconst Api = {\n  get5daysForecast(city, country, apiKey) {\n    return fetch(apiUrl + 'forecast?q=' + city + ',' + country + '&units=metric&appid=' + apiKey)\n      .then((response) => {\n        return response.json();\n      });\n  }\n}\n\nexport default Api;\n","import React, { Component } from 'react';\nimport './Weather.css';\n\nimport DayDetails from './day_details';\nimport Api from './services/api';\n\nclass Weather extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n        weatherData: {\n          list: []\n        }\n    };\n  }\n\n  componentDidMount(){\n    Api.get5daysForecast(this.props.city, this.props.country, this.props.apiKey)\n      .then((response) => {\n        this.updateWeatherData(response)\n      });\n  }\n\n  updateWeatherData(data) {\n    this.setState({\n      weatherData: data\n    })\n  }\n\n  render() {\n    return (\n      <section className=\"weather-section\">\n        <div className=\"weather-component\">\n          <strong className=\"city-name\">{this.props.city}</strong>\n          <ul className=\"forecast-list\">\n          {\n            this.state.weatherData.list.slice(0,3).map((dayData) => {\n              return <DayDetails data={dayData} key={dayData.dt} />\n            })\n          }\n          </ul>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Weather;\n","import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport \"./PersonList.css\";\n\n// importing images\nimport anton from \"./personImages/anton.png\";\nimport waeel from \"./personImages/waeel.png\";\nimport rezan from \"./personImages/rezan.png\";\nimport mustafa from \"./personImages/mustafa.png\";\nimport penguin from \"./personImages/penguin.png\";\nimport horse from \"./personImages/horse.png\";\nimport monkey from \"./personImages/monkey.png\";\nimport rabbit from \"./personImages/rabbit.png\";\nimport bull from \"./personImages/bull.png\";\nimport mad from \"./personImages/mad.png\";\nimport sad from \"./personImages/sad.png\";\nimport happy from \"./personImages/happy.png\";\nimport disappointment from \"./personImages/disappointment.jpg\";\n// popup image should be same size, in this case w600/h450\n// import disaster from './personImages/disaster.jpg'\n// import drama from './personImages/drama.jpg'\nimport disaster from \"./personImages/ontime.jpg\";\nimport drama from \"./personImages/tolate.jpg\";\n\n// person icons to be loaded dynamically\nlet icons = {\n  anton,\n  mustafa,\n  rezan,\n  waeel,\n  penguin,\n  horse,\n  monkey,\n  rabbit,\n  bull,\n  mad,\n  sad,\n  happy,\n  disappointment,\n  drama,\n  disaster\n};\n\n// initial json object\nlet initialPersons = JSON.stringify([\n  { icon: \"mustafa\", name: \"Mustafa\", arrive: \"08:40 AM\", id: Math.random() },\n  { icon: \"waeel\", name: \"Waeel\", arrive: \"08:44 AM\", id: Math.random() }\n]);\n\n// parsing initialPersons\nlet Persons = JSON.parse(initialPersons).sort((a, b) => {\n  return a.arrive < b.arrive ? 1 : -1;\n});\n\n// new persons to add when arrived\nlet newPersons = [\n  { icon: \"rezan\", name: \"Rezan\", arrive: \"08:43 AM\", id: Math.random() },\n  // {icon: 'penguin', name: 'Maistro', arrive: '08:49 AM', id: Math.random()},\n  // {icon: 'anton', name: 'Anton', arrive: (moment().subtract(1, 'hours').format('LT')), id: Math.random()},\n  {\n    icon: \"anton\",\n    name: \"Anton\",\n    arrive: moment().format(\"LT\"),\n    id: Math.random()\n  }\n];\n\nconst PersonList = () => {\n  // state for persons list\n  const [personsState, setPersons] = useState(Persons);\n  // clock state\n  const [clock, setClock] = useState(moment().format(\"LT\"));\n  // index state to add new person\n  const [index, setIndex] = useState(0);\n  // state for popup image when person is late\n  const [showPopup, setShowPopup] = useState(false);\n  const [popImg, setPopImg] = useState(icons.disaster);\n  const [setArrivedName] = useState(\"\");\n\n  // some time constants\n  //course start time\n  const ON_TIME = \"09:00\";\n  const SECOND = 1000;\n  //duration of pupup image\n  const POPUP_DURATION = 5 * SECOND;\n\n  // update time every 10 secons = clock functionality\n  setInterval(() => {\n    setClock(moment().format(\"LT\"));\n  }, 10 * SECOND);\n\n  // simulating person coming and add them to person state\n  const addPerson = () => {\n    if (index < newPersons.length) {\n      var arrivedPerson = JSON.parse(JSON.stringify(newPersons[index]));\n      var Persons = [arrivedPerson, ...personsState];\n      setPersons(Persons);\n      setIndex(index + 1);\n      // setArrivedName(arrivedPerson.name);\n      // showing popup if person arrived late\n      if (arrivedPerson.arrive > ON_TIME) {\n        setPopImg(icons.drama);\n      } else {\n        setPopImg(icons.disaster);\n      }\n      setShowPopup(true);\n      setTimeout(() => {\n        setShowPopup(false);\n      }, POPUP_DURATION);\n    }\n  };\n  const smiliStyle = {\n    height: \"50px\",\n    marginTop: \"23px\"\n  };\n\n  const userPic = {\n    height: \"100px\"\n  };\n  // mapping persons list\n  const persons = personsState.map((person, index) => {\n    // change smili icon based on time\n    var smili = person.arrive > ON_TIME ? icons.sad : icons.happy;\n\n    return (\n      <div className={\"bar \" + (index % 2 ? \"odd\" : \"even\")} key={person.id}>\n        <img src={icons[person.icon]} style={userPic} alt=\"Avatar\" />\n        <h4 className=\"name\">{person.name}</h4>\n        {/* <h4 className=\"med\">{person.arrive}</h4> */}\n        <img className=\"smili\" style={smiliStyle} src={smili} alt=\"smili\" />\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"person-list\">\n      <div className=\"bar main-bar\" onClick={() => addPerson()}>\n        <h3>[{clock}]</h3>\n\n        {/* <h4 >Image</h4>\n                <h4>Name</h4>\n                <h4><strong>{theTime}</strong></h4>\n                <h4>Treatment</h4> */}\n      </div>\n\n      <div className=\"persons\">\n        {persons}\n        {/* display different popup whether person is late or not */}\n        {showPopup && (\n          <div className=\"popup\">\n            <div\n              className=\"popup-img\"\n              style={{ backgroundImage: `url(${popImg})` }}\n            >\n              {/* <h2>{{ arrivedName }}</h2> */}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PersonList;\n","import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport DbApi from \"./Dbapi/Dbapi\";\nimport Weather from \"./Weather/Weather\";\nimport PersonList from \"./PersonList/PersonList\";\n\nimport \"./Monitor.css\";\n\nconst monitorStyle = {\n  display: \"flex\",\n  margin: \"10px\",\n  height: \"-webkit-fill-available\",\n  justifyContent: \"flex-start\",\n  marginTop: \"25px\"\n};\nconst Monitor = () => {\n  // state to show section\n  const [setShowSection] = useState(false);\n  const MINUT = 60000;\n\n  // checking time every 10 minutes and hide api section between 7 pm and 8 am\n  // setInterval(() => {\n  //   setShowSection(moment().format(\"HH\") > 8 && moment().format(\"HH\") < 19);\n  // }, 10 * MINUT);\n\n  return (\n    <div className=\"monitor\" style={monitorStyle}>\n      <PersonList />\n\n      {/* show api only on time */}\n      {/* {showSection &&  \n        } */}\n\n      <div className=\"api\">\n        <Weather\n          apiKey=\"5b8aac88f05d77df8cf00012dad30f43\"\n          city=\"Düsseldorf\"\n          country=\"Germany\"\n        />\n        <DbApi />\n      </div>\n    </div>\n  );\n};\n\nexport default Monitor;\n","import React from \"react\";\n// import uuid from \"react-uuid\";\n\nconst MembersList = props => {\n  console.log(props);\n  console.log(props.personData);\n  return (\n    <tr>\n      <td>{props.personData.matrikelNummer}</td>\n      <td>{props.personData.firstName + \" \" + props.personData.lastName}</td>\n      <td>{props.personData.telefon}</td>\n      <td>{props.personData.email}</td>\n      <td>\n        {props.personData.adresse.street +\n          \", \" +\n          props.personData.adresse.stadt}\n      </td>\n    </tr>\n  );\n};\n\nexport default MembersList;\n","import React from \"react\";\nimport Data from \"../Data.json\";\nimport \"./Members.css\";\nimport MembersList from \"./MembersList\";\nimport uuid from \"react-uuid\";\n\nclass Members extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      personData: Data,\n      query: \"\"\n    };\n  }\n  render() {\n    // general search function\n    const searchThem = (arr, query, callback) => {\n      return arr.filter(\n        item =>\n          callback(item)\n            .toLowerCase()\n            .search(query.toLowerCase()) !== -1\n      );\n    };\n    // applying function to search by first and last name\n    const searchedMembers = searchThem(\n      this.state.personData,\n      this.state.query,\n      item => item.firstName + item.lastName\n    );\n\n    const AllMembers = searchedMembers.map(MyData => (\n      <MembersList key={uuid()} personData={MyData} />\n    ));\n\n    return (\n      <section className=\"membersContainer\">\n        {/* search */}\n        <div className=\"search-members\">\n          <label htmlFor=\"search\">search</label>\n          <input\n            id=\"search\"\n            type=\"text\"\n            value={this.state.query}\n            onChange={e => this.setState({ query: e.target.value })}\n          />\n        </div>\n        {/* search */}\n\n        <table className=\"membersTable\">\n          <tr>\n            <th>Matrikel Nummer</th>\n            <th>Name</th>\n            <th>Telefonnummer</th>\n            <th>E-Mail</th>\n            <th>Addresse</th>\n          </tr>\n          {AllMembers}\n        </table>\n      </section>\n    );\n  }\n}\n\nexport default Members;\n","import React from \"react\";\nimport \"./Profile.css\";\nimport Data from \"../Data.json\";\nimport uuid from \"react-uuid\";\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { MyData: Data[0], AllData: Data, value: \"\" };\n  }\n  handleChange = e => {\n    console.log(this.state.AllData);\n    let newData = this.state.AllData.filter(el => {\n      return el.id === e.target.value;\n    });\n\n    this.setState({\n      value: e.target.value,\n      MyData: newData[0]\n    });\n    console.log(this.state.MyData);\n  };\n\n  render() {\n    const PersonName = this.state.AllData.map(infoPerson => {\n      return (\n        <option key={uuid()} value={infoPerson.id}>\n          {infoPerson.firstName}\n        </option>\n      );\n    });\n    return (\n      <section className=\"profileContainer\">\n        <header />\n        <section className=\"profileContent\">\n          <img className=\"imgProfile\" src={this.state.MyData.photo} alt=\"\" />\n          <form>\n            <h3>Teilnehmer:</h3>\n            <select value={this.state.value} onChange={this.handleChange}>\n              {PersonName}\n            </select>\n            <table className=\"profileTable\">\n              <tr>\n                <th>\n                  <label htmlFor=\"id\">ID:</label>\n                </th>\n                <td>\n                  <input type=\"text\" value={this.state.MyData.id} />\n                </td>\n              </tr>\n              <tr>\n                <th>\n                  <label htmlFor=\"chipNumber\">Chip Number:</label>\n                </th>\n                <td>\n                  <input\n                    type=\"text\"\n                    placeholder={this.state.MyData.chipNumber}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <th>\n                  <label htmlFor=\"Firstname\">First Name:</label>\n                </th>\n                <td>\n                  <input\n                    type=\"text\"\n                    placeholder={this.state.MyData.firstName}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <th>\n                  <label htmlFor=\"Lastname\">Last Name:</label>\n                </th>\n                <td>\n                  <input type=\"text\" placeholder={this.state.MyData.lastName} />\n                </td>\n              </tr>\n              <tr>\n                <th>\n                  <label htmlFor=\"telefon\">Tel:</label>\n                </th>\n                <td>\n                  <input type=\"text\" placeholder={this.state.MyData.telefon} />\n                </td>\n              </tr>\n              <tr>\n                <th>\n                  <label htmlFor=\"email\">E-mail:</label>\n                </th>\n                <td>\n                  <input type=\"text\" placeholder={this.state.MyData.email} />\n                </td>\n              </tr>\n              <tr>\n                <th>\n                  <label htmlFor=\"adresse\">Addresse:</label>\n                </th>\n                <td>\n                  <input\n                    type=\"text\"\n                    placeholder={this.state.MyData.adresse.stadt}\n                  />\n                  <input\n                    type=\"text\"\n                    placeholder={this.state.MyData.adresse.street + \"Str\"}\n                  />\n                  <input\n                    type=\"text\"\n                    placeholder={this.state.MyData.adresse.hausNummer}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <th>\n                  <label htmlFor=\"roles\">Roles:</label>\n                </th>\n                <td>\n                  <input type=\"text\" value={this.state.MyData.roles} />\n                </td>\n              </tr>\n              <tr>\n                <th>\n                  <label htmlFor=\"matdikelNummer\">Matdikel Nummer:</label>\n                </th>\n                <td>\n                  <input\n                    type=\"text\"\n                    placeholder={this.state.MyData.matrikelNummer}\n                  />\n                </td>\n              </tr>\n            </table>\n            <input type=\"submit\" value=\"Save\" />\n          </form>\n        </section>\n      </section>\n    );\n  }\n}\n\nexport default Profile;\n","import React from \"react\";\n\nconst Error = () => {\n  return <p>Error</p>;\n};\n\nexport default Error;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Nav.css\";\nimport Logo from \"../../assest/Image/logo.png\";\n\nconst Nav = () => {\n  return (\n    <div className=\"sidebarContainer\">\n      <input type=\"checkbox\" id=\"menyAvPaa\" />\n      <label htmlFor=\"menyAvPaa\" id=\"burger\">\n        <div />\n        <div />\n        <div />\n      </label>\n      <nav id=\"meny\">\n        <ul>\n          <li>\n            <Link to=\"/\">\n              <i>Monitor</i>\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/profile\">\n              <i>Profile</i>\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/kurse\">\n              <i>Kurse</i>\n            </Link>\n          </li>\n          {/* <li>\n            <Link to=\"/members\">\n              <i>Members</i>\n            </Link>\n          </li> */}\n          <li>\n            <Link to=\"/report\">\n              <i>Report</i>\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/userProfile\">\n              <i>Userprofile</i>\n            </Link>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default Nav;\n","import React,{useState} from \"react\"\n\nconst Swipe = ({swipe, handelChange, index}) => {\n    const [canEdit, setCanEdit] = useState(false)\n\n    return(     \n        <div className={\"bar \" + (index%2? \"odd\":\"even\")} >\n            <h3 className=\"date\">{swipe.date}</h3>\n\n            <form onChange={(e)=>{if(canEdit){handelChange(e, swipe)}}} >\n\n                <label>\n                <input \n                    type=\"radio\" \n                    name=\"was\"\n                    value=\"true\"\n                    disabled={!canEdit} \n                    defaultChecked={swipe.was}\n                /> Ja\n                </label>\n                <label>\n                    <input \n                        type=\"radio\" \n                        name=\"was\"\n                        value=\"\"\n                        disabled={!canEdit} \n                        defaultChecked={!swipe.was}\n                    /> Nein\n                </label>\n        \n                <input className=\"med-check\" \n                    type=\"text\"\n                    disabled={!canEdit} \n                    name=\"reason\"\n                    placeholder=\"Grund\" \n                    defaultValue={swipe.reason}\n                />\n                \n            </form>\n            <button  \n                onClick={()=> {setCanEdit(!canEdit)}}>{canEdit? \"save\":\"edit\"}\n            </button>\n        </div>\n        \n    )\n}\n\nexport default Swipe","import React, { useState } from \"react\";\nimport Swipe from \"./Swipe\";\nimport \"./Report.css\";\n\n// initial json object\nlet initialSwipes = JSON.stringify([\n  { date: \"01.11.19\", was: true, in: \"\", out: \"\", reason: \"\" },\n  { date: \"02.11.19\", was: true, in: \"\", out: \"\", reason: \"\" },\n  { date: \"03.11.19\", was: true, in: \"\", out: \"\", reason: \"\" },\n  { date: \"04.11.19\", was: true, in: \"\", out: \"\", reason: \"\" },\n  { date: \"05.11.19\", was: true, in: \"\", out: \"\", reason: \"\" }\n]);\n\n// parsing json object\nlet Swipes = JSON.parse(initialSwipes);\n\nconst Report = props => {\n  // const [personState, setPersonState] = useState(props.person)\n  const [swipeState, setSwipeState] = useState(Swipes);\n\n  // handel every change\n  const handelChange = (e, swipe) => {\n    console.log(e.target, swipe);\n    const { name, value, type } = e.target;\n    var newValue = type === \"radio\" ? !!value : value;\n    const newSwipe = swipe;\n    newSwipe[name] = newValue;\n    const Swipes = [...swipeState];\n    Swipes.splice(swipeState.indexOf(swipe), 1, newSwipe);\n    setSwipeState(Swipes);\n    initialSwipes = JSON.stringify(Swipes);\n  };\n\n  // mapping swipe list\n  const swipes = swipeState.map((swipe, index) => {\n    return (\n      <Swipe\n        key={index}\n        swipe={swipe}\n        handelChange={handelChange}\n        index={index}\n      />\n    );\n  });\n\n  return (\n    <div className=\"swipes\">\n      <h2 className=\"text-h2\">Rezan Mohammad</h2>\n      <div className=\"bar main-bar\">\n        <h4>Date</h4>\n        <h4>Anwesend</h4>\n        <h4>Grund</h4>\n        <h4>Ändern</h4>\n      </div>\n      {swipes}\n    </div>\n  );\n};\n\nexport default Report;\n","import React, { Component } from \"react\";\nimport \"./Timer.css\";\n\nclass Timer extends Component {\n  state = {\n    timerOn: false,\n    timerStart: 0,\n    timerTime: 0\n  };\n\n  startTimer = () => {\n    this.setState({\n      timerOn: true,\n      timerTime: this.state.timerTime,\n      timerStart: Date.now() - this.state.timerTime\n    });\n    this.timer = setInterval(() => {\n      this.setState({\n        timerTime: Date.now() - this.state.timerStart\n      });\n    }, 10);\n  };\n\n  stopTimer = () => {\n    this.setState({ timerOn: false });\n    clearInterval(this.timer);\n  };\n\n  resetTimer = () => {\n    this.setState({\n      timerStart: 0,\n      timerTime: 0\n    });\n  };\n\n  render() {\n    const { timerTime } = this.state;\n    // let centiseconds = (\"0\" + (Math.floor(timerTime / 10) % 100)).slice(-2);\n    let seconds = (\"0\" + (Math.floor(timerTime / 1000) % 60)).slice(-2);\n    let minutes = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2);\n    let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\n    return (\n      <div className=\"Stopwatch\">\n        <div className=\"Stopwatch-header\">Ich bin da</div>\n        <div className=\"Stopwatch-display\">\n          {hours} : {minutes} : {seconds}\n        </div>\n        {this.state.timerOn === false && this.state.timerTime === 0 && (\n          <button onClick={this.startTimer}>Start</button>\n        )}\n        {this.state.timerOn === true && (\n          <button onClick={this.stopTimer}>Stop</button>\n        )}\n        {this.state.timerOn === false && this.state.timerTime > 0 && (\n          <button onClick={this.startTimer}>Resume</button>\n        )}\n        {this.state.timerOn === false && this.state.timerTime > 0 && (\n          <button onClick={this.resetTimer}>Reset</button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Timer;\n","import React from \"react\";\nimport \"./UserProfile.css\";\nimport Data from \"../Data.json\";\nimport Timer from \"./Timer\";\n// import uuid from \"react-uuid\";\n\nconst nameStyle = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  justifyConrent: \"space-between\"\n};\n\nconst h1Style = {\n  paddingRight: \"330px\"\n};\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { MyData: Data[0], AllData: Data, value: \"\" };\n  }\n\n  handleChange = e => {\n    console.log(this.state.AllData);\n    let newData = this.state.AllData.filter(el => {\n      return el.id === e.target.value;\n    });\n\n    this.setState({\n      value: e.target.value,\n      MyData: newData[0]\n    });\n    console.log(this.state.MyData);\n  };\n\n  render() {\n    // const PersonName = this.state.AllData.map(infoPerson => {\n    //   return (\n    //     <option key={uuid()} value={infoPerson.id}>\n    //       {infoPerson.firstName}\n    //     </option>\n    //   );\n    // });\n    return (\n      <section className=\"profileContainer\">\n        <header />\n        <section className=\"profileContent\">\n          <img className=\"imgProfile\" src={this.state.MyData.photo} alt=\"\" />\n          <form>\n            <div style={nameStyle}>\n              <h1 style={h1Style}>Waeel Alsydo</h1>\n              <Timer />\n            </div>\n\n            <table className=\"profileTable\">\n              <tr>\n                <th>\n                  <label htmlFor=\"id\">ID:</label>\n                </th>\n                <td>\n                  <input type=\"text\" value={this.state.MyData.id} />\n                </td>\n              </tr>\n              <tr>\n                <th>\n                  <label htmlFor=\"chipNumber\">Chip Number:</label>\n                </th>\n                <td>\n                  <input\n                    type=\"text\"\n                    placeholder={this.state.MyData.chipNumber}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <th>\n                  <label htmlFor=\"Firstname\">First Name:</label>\n                </th>\n                <td>\n                  <input\n                    type=\"text\"\n                    placeholder={this.state.MyData.firstName}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <th>\n                  <label htmlFor=\"Lastname\">Last Name:</label>\n                </th>\n                <td>\n                  <input type=\"text\" placeholder={this.state.MyData.lastName} />\n                </td>\n              </tr>\n              <tr>\n                <th>\n                  <label htmlFor=\"telefon\">Tel:</label>\n                </th>\n                <td>\n                  <input type=\"text\" placeholder={this.state.MyData.telefon} />\n                </td>\n              </tr>\n              <tr>\n                <th>\n                  <label htmlFor=\"email\">E-mail:</label>\n                </th>\n                <td>\n                  <input type=\"text\" placeholder={this.state.MyData.email} />\n                </td>\n              </tr>\n              <tr>\n                <th>\n                  <label htmlFor=\"adresse\">Addresse:</label>\n                </th>\n                <td>\n                  <input\n                    type=\"text\"\n                    placeholder={this.state.MyData.adresse.stadt}\n                  />\n                  <input\n                    type=\"text\"\n                    placeholder={this.state.MyData.adresse.street + \"Str\"}\n                  />\n                  <input\n                    type=\"text\"\n                    placeholder={this.state.MyData.adresse.hausNummer}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <th>\n                  <label htmlFor=\"roles\">Roles:</label>\n                </th>\n                <td>\n                  <input type=\"text\" value={this.state.MyData.roles} />\n                </td>\n              </tr>\n              <tr>\n                <th>\n                  <label htmlFor=\"matdikelNummer\">Matdikel Nummer:</label>\n                </th>\n                <td>\n                  <input\n                    type=\"text\"\n                    placeholder={this.state.MyData.matrikelNummer}\n                  />\n                </td>\n              </tr>\n            </table>\n            <div className=\"button\">\n              <input type=\"submit\" value=\"Save\" />\n            </div>\n          </form>\n        </section>\n      </section>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from \"react\";\nimport Members from \"../Members/Members\";\n\nconst hStyle = {\n  \"text-align\": \"center\"\n};\n\nclass Kurs1 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div>\n        <h1 style={hStyle}>Vollzeit Kurs</h1>\n        <Members />\n      </div>\n    );\n  }\n}\n\nexport default Kurs1;\n","import React, { Component } from \"react\";\nimport Members from \"../Members/Members\";\n\nconst hStyle = {\n  \"text-align\": \"center\"\n};\nclass Kurs1 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div>\n        <h1 style={hStyle}>Teilzeit Kurs</h1>\n        <Members />\n      </div>\n    );\n  }\n}\n\nexport default Kurs1;\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\nimport Kurs1 from \"./Kurs1\";\nimport Kurs2 from \"./Kurs2\";\nimport Error from \"../Error\";\nimport \"./kurs.css\";\n\n// const cont = {\n//   display: \"flex\",\n//   flexDirection: \"row\"\n// };\n\nconst kursDiv = {\n  height: \"100px\",\n  width: \"160px\",\n  backgroundColor: \"#3dd7ac\",\n  margin: \"10px 10px\",\n  borderRadius: \"5px\"\n};\n\nclass Kurse extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div className=\"kurs_container\">\n        <BrowserRouter>\n          <div className=\"kursen_container\">\n            <Link to=\"/kurs1\">\n              <div className=\"kurs\" style={kursDiv}>\n                <h2>Vollzeit Kurs</h2>\n              </div>\n            </Link>\n            <Link to=\"/kurs2\">\n              <div className=\"kurs\" style={kursDiv}>\n                <h2>Teilzeit Kurs</h2>\n              </div>\n            </Link>\n          </div>\n          <div className=\"kurse\">\n            <Switch>\n              <Route exact path=\"/kurs1\" component={Kurs1} />\n              <Route exact path=\"/kurs2\" component={Kurs2} />\n              <Route path=\"/404\" component={Error} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default Kurse;\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Monitor from \"../Monitor/Monitor\";\nimport Members from \"../Members/Members\";\nimport Profile from \"../Profile/Profile\";\nimport Error from \"../Error\";\nimport Nav from \"../Nav/Nav\";\nimport Report from \"../Report/Report\";\nimport UserProfile from \"../UserProfile/UserProfile\";\nimport Kurse from \"../Kurse/Kurse\";\n\nimport \"./Content.css\";\n\nclass Content extends Component {\n  render() {\n    return (\n      <div className=\"content_container\">\n        <BrowserRouter>\n          <Nav />\n          <div className=\"content\">\n            <Switch>\n              <Route exact path=\"/\" component={Monitor} />\n              <Route path=\"/members\" component={Members} />\n              <Route path=\"/profile\" component={Profile} />\n              <Route path=\"/report\" component={Report} />\n              <Route path=\"/kurse\" component={Kurse} />\n\n              <Route path=\"/userProfile\" component={UserProfile} />\n              {/* <Redirect to=\"/\" /> */}\n              <Route path=\"/404\" component={Error} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default Content;\n","import React from \"react\";\nimport \"./App.css\";\nimport Logo from \"./assest/Image/logo.png\";\n\nimport Content from \"./Components/Content/Content\";\n\nfunction App() {\n  return (\n    <div>\n      <img src={Logo} alt=\"logo\" className=\"logo\" />\n      <Content />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}